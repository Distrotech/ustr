#! /bin/sh -e

INCDIR=/usr/include
SHRDIR=@SHRDIR@
VERS=@VERS@
VERS_FULL=@VERS_FULL@
autoconf_64b=@HAVE_64bit_SIZE_MAX@
autoconf_vsnprintf=@HAVE_RETARDED_VSNPRINTF@

dbg=false
fulldbg=false
cfiles=false
defbytes=2
exact=0
usesz=0

function usage
{
  echo " Format: $0 [-d] [-d] [-c] [-b x] [-s] [-e] all | <section> ..." 1>&2
  echo "     List of options:" 1>&2
  echo "         -d   = Turn debugging on, assert() trigger etc." 1>&2
  echo "         -d   = Turn extra debugging on" 1>&2
  echo "         -c   = Import/use .c files, instead of headers only" 1>&2
  echo "         -b   = Specify default ref. bytes size: 0, 1, 2 or 4" 1>&2
  echo "         -e   = Exact allocations used by default" 1>&2
  echo "         -s   = Sized value included by default" 1>&2
  echo "     List of sections:" 1>&2
  echo "         b    = strcat() binary numbers in NBO format" 1>&2
  echo "         cmp  = Comparing, strcmp() for Ustr's" 1>&2
  echo "         fmt  = Formatted output, sprintf() for Ustr's" 1>&2
  echo "         main = The core, strcat() and delete for Ustr's" 1>&2
  echo "         set  = strcpy() for Ustr's" 1>&2
  echo "         spn  = Spanning, strspn() / strcspn() for Ustr's" 1>&2
  echo "         srch = Searching, strchr() / strrchr() for Ustr's" 1>&2
  echo "" 1>&2
  echo "     Ustr Version: $VERS_FULL" 1>&2
  exit 1
}

if [ "x$1" = "x-d" ]; then
  dbg=true
  shift
fi

if [ "x$1" = "x-d" ]; then
  fulldbg=true
  shift
fi

if [ "x$1" = "x-c" ]; then
  cfiles=true
  shift
fi

if [ "x$1" = "x-b" ]; then
  shift
  defbytes="$1"
  shift
fi

if [ "x$1" = "x-e" ]; then
  shift
  exact="$1"
  shift
fi

all=false
b=false
cmp=false
fmt=false
main=false
set=false
spn=false
srch=false

for i in $@; do
  case "$i" in
    all)  all=true                        ;;
    b)    b=true;               main=true ;;
    cmp)  cmp=true;             main=true ;;
    fmt)  fmt=true;             main=true ;;
    main)                       main=true ;;
    set)  set=true;             main=true ;;
    spn)  spn=true;  srch=true; main=true ;;
    srch) srch=true;            main=true ;;
    *)
      usage
      ;;
  esac
done

if $all; then
  cmp=true
  b=true
  fmt=true
  main=true
  set=true
  spn=true
  srch=true
fi

if ! $main; then
  usage
fi

# ---------------------------------------------
# Copy all the files locally...
# ---------------------------------------------
function copy
{
  name="$1"
  cp "$INCDIR/ustr-$name.h" .
  if $cfiles && test -f "$SHRDIR/ustr-$name-code.h"; then
    cp "$SHRDIR/ustr-$name-code.h" .
    if $dbg; then
      cp "$SHRDIR/ustr-$name-dbg-code.c" .
    else
      cp "$SHRDIR/ustr-$name-opt-code.c" .
    fi
  fi
}

cp "$SHRDIR/.gdbinit" .

if $b; then
  copy b
fi

if $cmp; then
  copy cmp
fi

# conf is generated from scratch

if $fmt; then
  copy fmt
fi

copy main

if $set; then
  copy set
fi

if $spn; then
  copy spn
fi

if $srch; then
  copy srch
fi



# ---------------------------------
# Generate a valid ustr-conf.h file
# ---------------------------------
outname=ustr-conf.h
if $dbg; then
  outname=ustr-conf-debug.h
fi

echo "/* This file is auto generated from $0 */" > $outname
echo >> $outname
echo >> $outname
echo '#ifndef USTR_CONF_H'   >> $outname
echo '#define USTR_CONF_H 1' >> $outname
echo >> $outname
echo >> $outname

if $cfiles; then
  # So they can still override, just change the default
  echo "/* The default is now to link against libc. */" >> $outname
  echo "#ifndef USTR_CONF_INCLUDE_CODEONLY_HEADERS"     >> $outname
  echo '#define USTR_CONF_INCLUDE_CODEONLY_HEADERS 0'   >> $outname
  echo "#endif" >> $outname
  echo >> $outname
else
  echo "/* Same default, newer position. */"            >> $outname
  echo "#ifndef USTR_CONF_INCLUDE_CODEONLY_HEADERS"     >> $outname
  echo '#define USTR_CONF_INCLUDE_CODEONLY_HEADERS 1'   >> $outname
  echo "#endif" >> $outname
  echo >> $outname
fi

  echo "/* We can't: if defined(__GLIBC__) && (!defined(_GNU_SOURCE) || !_GNU_SOURCE)" >> $outname
  echo " *  because by the time we've included a libc header it's too late. */ " >> $outname
  echo "#ifndef _GNU_SOURCE" >> $outname
  echo "#define _GNU_SOURCE 1" >> $outname
  echo "#endif" >> $outname
  echo >> $outname
  echo >> $outname

if $cfiles; then
  echo "#if ! USTR_CONF_INCLUDE_CODEONLY_HEADERS" >> $outname
  echo "/* If you aren't just using the headers, these should match the .c's */" >> $outname
  echo >> $outname
  echo "# define USTR_CONF_HAVE_64bit_SIZE_MAX $autoconf_64b" >> $outname
  echo "# define USTR_CONF_HAVE_RETARDED_VSNPRINTF $autoconf_vsnprintf" >> $outname
  echo >> $outname
  echo "# define USTR_CONF_REF_BYTES   $defbytes" >> $outname
  echo "# define USTR_CONF_EXACT_BYTES $exact"    >> $outname
  echo "# define USTR_CONF_USE_SIZE    $usesz"    >> $outname

  echo >> $outname
if $dbg; then
  echo '# define USTR_CONF_USE_ASSERT 1' >> $outname
else
  echo '# define USTR_CONF_USE_ASSERT 0' >> $outname
fi

if $fulldbg; then
  echo '# define USTR_CONF_USE_EOS_MARK 1' >> $outname
else
  echo '# define USTR_CONF_USE_EOS_MARK 0' >> $outname
fi

  echo >> $outname

  echo "#else" >> $outname
else
  echo "/* Same defaults, but can be altered at will. */" >> $outname
  echo >> $outname
  echo "# ifndef USTR_CONF_HAVE_64bit_SIZE_MAX"               >> $outname
  echo "# define USTR_CONF_HAVE_64bit_SIZE_MAX $autoconf_64b" >> $outname
  echo "# endif" >> $outname
  echo "# ifndef USTR_CONF_HAVE_RETARDED_VSNPRINTF"           >> $outname
  echo "# define USTR_CONF_HAVE_RETARDED_VSNPRINTF $autoconf_vsnprintf" >> $outname
  echo "# endif" >> $outname
  echo >> $outname
  echo "# ifndef USTR_CONF_REF_BYTES"           >> $outname
  echo "# define USTR_CONF_REF_BYTES $defbytes" >> $outname
  echo "# endif" >> $outname
  echo "# ifndef USTR_CONF_EXACT_BYTES"         >> $outname
  echo "# define USTR_CONF_EXACT_BYTES $exact"  >> $outname
  echo "# endif" >> $outname
  echo "# ifndef USTR_CONF_USE_SIZE"            >> $outname
  echo "# define USTR_CONF_USE_SIZE    $usesz"  >> $outname
  echo "# endif" >> $outname

  echo >> $outname
  echo "# ifndef USTR_CONF_USE_ASSERT"          >> $outname
if $dbg; then
  echo '# define USTR_CONF_USE_ASSERT 1'        >> $outname
else
  echo '# define USTR_CONF_USE_ASSERT 0'        >> $outname
fi
  echo "# endif" >> $outname

  echo "# ifndef USTR_CONF_USE_EOS_MARK"   >> $outname
if $fulldbg; then
  echo '# define USTR_CONF_USE_EOS_MARK 1' >> $outname
else
  echo '# define USTR_CONF_USE_EOS_MARK 0' >> $outname
fi
  echo "# endif" >> $outname

  echo >> $outname
  echo "#endif" >> $outname
  echo >> $outname
fi

if [ -f "/usr/include/stdint.h" ]; then
  echo "/* We found the file /usr/include/stdint.h at import time */" >> $outname
  echo "#define USTR_CONF_HAVE_STDINT_H 1" >> $outname
fi

echo >> $outname
echo >> $outname
echo '#endif' >> $outname

# ----------------------------
# Generate a valid ustr.h file
# ----------------------------
outname=ustr.h
if $dbg; then
  outname=ustr-debug.h
fi


echo "/* This file is auto generated from $0 */" > $outname
echo >> $outname
echo >> $outname
echo '#ifndef USTR_H'   >> $outname
echo '#define USTR_H 1' >> $outname
echo >> $outname
echo >> $outname

if $cfiles; then
  # So they can still override, just change the default
  echo "#ifndef USTR_CONF_INCLUDE_CODEONLY_HEADERS" >> $outname
  echo '#define USTR_CONF_INCLUDE_CODEONLY_HEADERS 0' >> $outname
  echo "#endif" >> $outname
  echo >> $outname
fi

echo >> $outname

echo "#ifndef USTR_DEBUG"   >> $outname
if $dbg; then
echo "#define USTR_DEBUG 1" >> $outname
else
echo "#define USTR_DEBUG 0" >> $outname
fi
echo "#endif"               >> $outname

echo >> $outname
echo >> $outname

# Everything deps. on CONF
echo "#if USTR_DEBUG" >> $outname
echo '# include "ustr-conf-debug.h"' >> $outname
echo "#else" >> $outname
echo '# include "ustr-conf.h"' >> $outname
echo "#endif" >> $outname

echo >> $outname

# Everything deps. on MAIN
echo '#include "ustr-main.h"'   >> $outname

if $cmp; then
  echo '#include "ustr-cmp.h"'  >> $outname
fi

if $set; then
  echo '#include "ustr-set.h"'  >> $outname
fi
if $fmt; then # FMT kind of deps. on SET
  echo '#include "ustr-fmt.h"'  >> $outname
fi

if $srch; then
  echo '#include "ustr-srch.h"' >> $outname
fi
if $spn; then # SPN deps. on SRCH
  echo '#include "ustr-spn.h"'  >> $outname
fi

echo >> $outname
echo >> $outname
echo '#endif' >> $outname
